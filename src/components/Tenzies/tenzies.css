.tenzies-container {
    padding: 0rem 2rem 2rem 2rem;
    min-width: 900px;
    color:#002b36;
    position: relative;
}

.tenzies {
    color:#002b36;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-top: 3rem;
    gap: 2rem;
}

.refresh {
    position: absolute;
    width: 1.5rem;
    top: 0;
    right: 0;
    margin: 1.5rem;
    cursor: pointer;
}

svg path:hover {
    fill: #064c5e;
}

svg path {
    fill: white;
}

.diceGrid {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 0.5rem;
    justify-content: space-between;
}

.die {
    width: 3rem;
    height: 3rem;
    border-radius: 5px;;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.5rem;
    font-weight: 800;
    box-shadow: 0px 2px 2px 2px #002b36;
}

.face {
	display: grid;
	grid-template-areas:
		"a . c"
		"e g f"
		"d . b";

	flex: 0 0 auto;
	margin: 16px;
	padding: 10px;
	width: 104px;
	height: 104px;

	background-color: #e7e7e7;  
	box-shadow: inset 0 5px white, inset 0 -5px #bbb, inset 5px 0 #d7d7d7,
		inset -5px 0 #d7d7d7;
	border-radius: 10%;
    cursor: pointer;
}

.pip {
	display: block;
	align-self: center;
	justify-self: center;
	width: 24px;
	height: 24px;
	border-radius: 50%;
	background-color: #333;
	box-shadow: inset 0 3px #111, inset 0 -3px #555;
}

.pip:nth-child(2) {
	grid-area: b;
}
.pip:nth-child(3) {
	grid-area: c;
}
.pip:nth-child(4) {
	grid-area: d;
}
.pip:nth-child(5) {
	grid-area: e;
}
.pip:nth-child(6) {
	grid-area: f;
}
/* This selects the last pip of odd-valued dice (1, 3, 5) and positions the pip in the center */
.pip:nth-child(odd):last-child {
	grid-area: g;
}

.tenzies-title {
    color: #eee8d5;
}

.tenzies-container button {
    background-color: #eee8d5;
    color: #002b36;
    border-radius: 5px;
    padding: 1rem;
}

.tenzies-container button:hover {
    background-color: rgba(238,232,213,0.6);
    color: #002b36;
    border-radius: 5px;
    padding: 1rem;
    cursor: pointer;
}